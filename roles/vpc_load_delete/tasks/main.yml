---
# tasks file for vpc_load_delete
- pause:
    minutes: 1

- name: collecting vpc id from aws instance
  ec2_vpc_net_info:
    region: "{{ region }}"
    filters:
      "tag:Name": "{{ vpc_name }}"
  register: vpcresults
- debug:
    var: vpcresults

- debug:
    var: vpcresults.vpcs[0].vpc_id
  when: vpcresults.vpcs[0].tags.Name == "{{ vpc_name }}"



- name: Deleting load balancer from a region
  ec2_elb_lb:
    name: "{{ application }}-load-balancer"
    state: absent
    region: "{{ region }}"
  register: deleteelb
- debug:
    var: deleteelb

- pause:
    minutes: 1


- name: Deleting load balancer from a region
  ec2_elb_lb:
    name: "{{ application1 }}-load-balancer"
    state: absent
    region: "{{ region }}"
  register: deleteelb1
- debug:
    var: deleteelb1

- name: remove key pair by name
  ec2_key:
    name: "{{ keypair_name }}"
    region: "{{ region }}"
    state: absent
  register: delkey

- debug:
    var: delkey


- name: Remove SG
  ec2_group:
      name: "{{ securitygroup_name }}"
      description: "{{ securitygroup_desc }}"
      region: "{{ region }}"
      state: absent
  register: delsg
- debug:
    var: delsg



- name: delete route table
  ec2_vpc_route_table:
#    vpc_id: "{{ insttermresults.instances[0].network_interfaces[0].vpc_id }}"
    vpc_id: "{{ vpcresults.vpcs[0].vpc_id }}"
 #   vpc_id: "{{ vpcdelete }}"
    region: "{{ region }}"
    state: absent
    tags:
      Name: "{{ route_name }}"
  register: delroutetable
- debug:
    var: delroutetable


- name: deleting internet gateway
  ec2_vpc_igw:
 #   vpc_id: "{{ insttermresults.instances[0].network_interfaces[0].vpc_id }}"
    vpc_id: "{{ vpcresults.vpcs[0].vpc_id }}"
 #   vpc_id: "{{ vpcdelete }}"
    region: "{{ region }}"
    state: absent
    tags:
      Name: "{{ igw_name }}"
  register: igwdeleted

- debug:
    var: igwdeleted

- name: Remove subnet
  ec2_vpc_subnet:
    state: absent
  #  vpc_id: "{{ insttermresults.instances[0].network_interfaces[0].vpc_id }}"
    vpc_id: "{{ vpcresults.vpcs[0].vpc_id }}"
    #vpc_id: "{{ vpcdelete }}"
    cidr: "{{ subnet_cidr }}"
    region: "{{ region }}"
    map_public: yes
    resource_tags:
      Name: "{{ subnet_name }}"
  register: delsubnet
- debug:
    var: delsubnet





- name: Delete nondefault VPC
  ec2_vpc_net:
     name: "{{ vpc_name }}"
     cidr_block: "{{ vpc_cidr }}"
     region: "{{ region }}"
     state: absent
  register: vpcdeleted
- debug:
    var: vpcdeleted

